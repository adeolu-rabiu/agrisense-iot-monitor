services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
    ports:
      - "9090:9090"
    networks:
      - agrisense-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - agrisense-net

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    command:
      ["--config.file=/etc/alertmanager/alertmanager.yml"]
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./alertmanager/secrets/slack_webhook:/etc/alertmanager/secrets/slack_webhook:ro
    ports:
      - "9093:9093"
    networks:
      - agrisense-net

  mqtt-broker:
    image: eclipse-mosquitto:2
    container_name: mqtt-broker
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - agrisense-net

  device-simulator:
    build: ./device-simulator
    container_name: device-simulator
    # Keep reading .env if you want to override values without editing compose
    env_file:
      - ./.env
    environment:
      # sane defaults (overridden by .env if present)
      SIMULATOR_SCRAPE_PORT: "${SIMULATOR_SCRAPE_PORT:-8081}"
      SIMULATOR_SILO_COUNT:  "${SIMULATOR_SILO_COUNT:-5}"
      SIMULATOR_MQTT_HOST:   "${SIMULATOR_MQTT_HOST:-mqtt-broker}"
      SIMULATOR_MQTT_PORT:   "${SIMULATOR_MQTT_PORT:-1883}"
      # test-mode flags; leave false for normal ops
      SIMULATOR_FORCE_LOW_BATTERY: "${SIMULATOR_FORCE_LOW_BATTERY:-false}"
      SIMULATOR_FORCE_LOW_SIGNAL:  "${SIMULATOR_FORCE_LOW_SIGNAL:-false}"
      SIMULATOR_FORCE_DROPOUT:     "${SIMULATOR_FORCE_DROPOUT:-false}"
    ports:
      # host:container â€” container is always 8081; host can vary via .env
      - "${SIMULATOR_SCRAPE_PORT:-8081}:8081"
    depends_on:
      - mqtt-broker
      - prometheus
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request; urllib.request.urlopen('http://127.0.0.1:8081/metrics').read(); print('ok')\""]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - agrisense-net

networks:
  agrisense-net:
    driver: bridge

volumes:
  grafana-data:

